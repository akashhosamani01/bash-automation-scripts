#!/bin/bash

# Define thresholds
CPU_THRESHOLD=80
MEMORY_THRESHOLD=80
DISK_THRESHOLD=80
LOG_FILE="/var/log/system_health.log"

# Function to log and print messages
log_message() {
    local message="$1"
    echo "$message" | tee -a "$LOG_FILE"
}

# Check CPU usage
check_cpu() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
    if (( $(echo "$cpu_usage > $CPU_THRESHOLD" | bc -l) )); then
        log_message "WARNING: CPU usage is at ${cpu_usage}%"
    else
        log_message "CPU usage is normal at ${cpu_usage}%"
    fi
}

# Check memory usage
check_memory() {
    local memory_usage=$(free | grep Mem | awk '{print ($3/$2)*100}')
    if (( $(echo "$memory_usage > $MEMORY_THRESHOLD" | bc -l) )); then
        log_message "WARNING: Memory usage is at ${memory_usage}%"
    else
        log_message "Memory usage is normal at ${memory_usage}%"
    fi
}

# Check disk space usage
check_disk() {
    local disk_usage=$(df / | grep / | awk '{ print $5 }' | sed 's/%//g')
    if (( disk_usage > DISK_THRESHOLD )); then
        log_message "WARNING: Disk space usage is at ${disk_usage}%"
    else
        log_message "Disk space usage is normal at ${disk_usage}%"
    fi
}

# Check running processes
check_processes() {
    local process_count=$(ps aux | wc -l)
    log_message "Number of running processes: ${process_count}"
}

# Main function to run checks
main() {
    log_message "System Health Check - $(date)"
    check_cpu
    check_memory
    check_disk
    check_processes
    log_message "--------------------------------------------------"
}

# Create log file if it doesn't exist
touch "$LOG_FILE"

# Run the health check
main
